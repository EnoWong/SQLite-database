activity_details.xml

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/etCode"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Code"/>
        
    <EditText
        android:id="@+id/etName"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Name"/>
        
    <Button
        android:id="@+id/btnUpdate"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Update"/>
        
    <Button
        android:id="@+id/btnDelete"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Delete"/>
</LinearLayout>

DetailsActivity
public class DetailsActivity extends AppCompatActivity {
    EditText etCode, etName;
    Button btnUpdate, btnDelete;
    ModuleDbHelper dbHelper;
    long moduleId;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_details);
        
        etCode = findViewById(R.id.etCode);
        etName = findViewById(R.id.etName);
        btnUpdate = findViewById(R.id.btnUpdate);
        btnDelete = findViewById(R.id.btnDelete);
        dbHelper = new ModuleDbHelper(this);
        
        // Get module ID from intent
        moduleId = getIntent().getLongExtra("ID", -1);
        
        if (moduleId != -1) {
            loadModuleDetails();
        }
        
        btnUpdate.setOnClickListener(v -> updateModule());
        btnDelete.setOnClickListener(v -> deleteModule());
    }

    private void loadModuleDetails() {
        SQLiteDatabase db = dbHelper.getReadableDatabase();
        Cursor cursor = db.rawQuery("SELECT * FROM " + ModuleDbHelper.TABLE_NAME + " WHERE ID = ?", 
            new String[]{String.valueOf(moduleId)});
            
        if (cursor.moveToFirst()) {
            etCode.setText(cursor.getString(1)); // Column index 1 is CODE
            etName.setText(cursor.getString(2)); // Column index 2 is NAME
        }
        cursor.close();
    }

    private void updateModule() {
        String code = etCode.getText().toString();
        String name = etName.getText().toString();
        
        if (!code.isEmpty() && !name.isEmpty()) {
            SQLiteDatabase db = dbHelper.getWritableDatabase();
            ContentValues values = new ContentValues();
            values.put(ModuleDbHelper.COL_2, code);
            values.put(ModuleDbHelper.COL_3, name);
            
            db.update(ModuleDbHelper.TABLE_NAME, values, "ID = ?", 
                new String[]{String.valueOf(moduleId)});
            finish(); // Return to List Page
        } else {
            Toast.makeText(this, "Please fill all fields", Toast.LENGTH_SHORT).show();
        }
    }

    private void deleteModule() {
        SQLiteDatabase db = dbHelper.getWritableDatabase();
        db.delete(ModuleDbHelper.TABLE_NAME, "ID = ?", 
            new String[]{String.valueOf(moduleId)});
        finish(); // Return to List Page
    }
}
